# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

[*]

# Indentation and spacing
indent_style = tab

# Newline and whitespace preferences
end_of_line = auto
insert_final_newline = true
trim_trailing_whitespace = true

charset = utf-8

[*.{yml,yaml}]

# YAML requires spaces for indentation
indent_style = space
indent_size = 4

[*.cs]

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# Expression-level preferences
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:error
dotnet_style_object_initializer = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# var preferences
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_extended_property_pattern = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null-checking preferences
csharp_style_conditional_delegate_call = true:warning

# Modifier preferences
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:silent
csharp_prefer_readonly_struct = true:warning

# Code-block preferences
csharp_prefer_braces = when_multiline:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = file_scoped:error
csharp_style_prefer_top_level_statements = false:error

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:error
csharp_style_prefer_null_check_over_type_check = true:error
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:suggestion

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = none
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = false
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization                     = pascal_case
dotnet_naming_style.I_prefix_style.required_prefix                       = I
dotnet_naming_style.I_prefix_style.capitalization                        = pascal_case
dotnet_naming_style.camel_case_style.capitalization                      = camel_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity        = warning
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols         = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style           = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds                   = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities         = *
dotnet_naming_symbols.constant_fields.required_modifiers                 = const

# Use PascalCase for public fields
dotnet_naming_rule.pascal_case_for_public_fields.severity                = warning
dotnet_naming_rule.pascal_case_for_public_fields.symbols                 = public_fields
dotnet_naming_rule.pascal_case_for_public_fields.style                   = pascal_case_style
dotnet_naming_symbols.public_fields.applicable_kinds                     = field
dotnet_naming_symbols.public_fields.applicable_accessibilities           = public

# Interfaces must be PascalCase and have an I prefix
dotnet_naming_rule.interfaces_start_with_I.severity                      = warning
dotnet_naming_rule.interfaces_start_with_I.symbols                       = any_interface
dotnet_naming_rule.interfaces_start_with_I.style                         = I_prefix_style
dotnet_naming_symbols.any_interface.applicable_kinds                     = interface
dotnet_naming_symbols.any_interface.applicable_accessibilities           = *

# Private properties, methods must be camelCase
dotnet_naming_rule.privates_naming.severity                              = warning
dotnet_naming_rule.privates_naming.symbols                               = privates
dotnet_naming_rule.privates_naming.style                                 = camel_case_style
dotnet_naming_symbols.privates.applicable_kinds                          = property,method
dotnet_naming_symbols.privates.applicable_accessibilities                = private

# Types, namespaces, delegates, events, non-private properties/methods, type parameters must be PascalCase
dotnet_naming_rule.general_naming.severity                               = warning
dotnet_naming_rule.general_naming.symbols                                = general
dotnet_naming_rule.general_naming.style                                  = pascal_case_style
dotnet_naming_symbols.general.applicable_kinds                           = class,struct,enum,namespace,delegate,event,property,method,type_parameter
dotnet_naming_symbols.general.applicable_accessibilities                 = *

# Everything else is camelCase
dotnet_naming_rule.everything_else_naming.severity                       = warning
dotnet_naming_rule.everything_else_naming.symbols                        = everything_else
dotnet_naming_rule.everything_else_naming.style                          = camel_case_style
dotnet_naming_symbols.everything_else.applicable_kinds                   = *
dotnet_naming_symbols.everything_else.applicable_accessibilities         = *

[*.lua]

# none/single/double
quote_style = double

# this mean utf8 length , if this is 'unset' then the line width is no longer checked
# this option decides when to chopdown the code
max_line_length = unset

#  none / comma / semicolon / only_kv_colon
table_separator_style = only_kv_colon

#optional keep/never/always/smart
trailing_table_separator = smart

# keep/remove/remove_table_only/remove_string_only
call_arg_parentheses = remove_table_only

detect_end_of_line = false

space_around_table_field_list = true

space_before_attribute = true

space_before_function_open_parenthesis = false

space_before_function_call_open_parenthesis = false

space_before_closure_open_parenthesis = false

# optional always/only_string/only_table/none
# or true/false
space_before_function_call_single_arg = only_string

space_before_open_square_bracket = false

space_inside_function_call_parentheses = false

space_inside_function_param_list_parentheses = false

space_inside_square_brackets = false

# like t[#t+1] = 1
space_around_table_append_operator = true

ignore_spaces_inside_function_call = false

space_before_inline_comment = 1

space_around_math_operator = true

space_after_comma = true

space_after_comma_in_for_statement = true

# true/false or none/always/no_space_asym
space_around_concat_operator = true

space_around_logical_operator = true

# true/false or none/always/no_space_asym
space_around_assign_operator = true

align_call_args = false

align_function_params = false

align_continuous_assign_statement = false

align_continuous_rect_table_field = false

align_continuous_line_space = 2

align_if_branch = false

# option none / always / contain_curly/
align_array_table = false

align_continuous_similar_call_args = false

align_continuous_inline_comment = false
# option none / always / only_call_stmt
align_chain_expr = none

never_indent_before_if_condition = false

never_indent_comment_on_if_branch = false

keep_indents_on_empty_lines = false

# The following (line_space_*) configuration supports four expressions
# keep
# fixed(n)
# min(n)
# max(n)
# for eg. min(2)

line_space_after_if_statement = keep

line_space_after_do_statement = keep

line_space_after_while_statement = keep

line_space_after_repeat_statement = keep

line_space_after_for_statement = keep

line_space_after_local_or_assign_statement = keep

line_space_after_function_statement = fixed(2)

line_space_after_expression_statement = keep

line_space_after_comment = keep

line_space_around_block = fixed(1)

break_all_list_when_line_exceed = false

auto_collapse_lines = false

break_before_braces = false

ignore_space_after_colon = false

remove_call_expression_list_finish_comma = false

# keep / always / same_line / repalce_with_newline
end_statement_with_semicolon = repalce_with_newline
